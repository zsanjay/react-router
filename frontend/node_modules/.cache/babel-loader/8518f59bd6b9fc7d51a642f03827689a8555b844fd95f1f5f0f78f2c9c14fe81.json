{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\n// You can useLoaderData() hook in the element that's assigned to a route AND \n// in all components that might be used inside that element. \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // ...\n    throw {\n      message: 'Could not fetch events.'\n    };\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","$RefreshReg$"],"sources":["/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\n// You can useLoaderData() hook in the element that's assigned to a route AND \n// in all components that might be used inside that element. \n\nfunction EventsPage() {\n  const data = useLoaderData();\n  const events = data.events;\n\n  return <EventsList events={events}/>;\n}\n\nexport default EventsPage;\n\n\nexport async function loader() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n      // ...\n      throw { message : 'Could not fetch events.'};\n    } else {\n      return response;\n  } \n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACtC;AAACN,EAAA,CALQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAY,EAAA,GADnBR,UAAU;AAOnB,eAAeA,UAAU;AAGzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAM;MAAEC,OAAO,EAAG;IAAyB,CAAC;EAC9C,CAAC,MAAM;IACL,OAAOH,QAAQ;EACnB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
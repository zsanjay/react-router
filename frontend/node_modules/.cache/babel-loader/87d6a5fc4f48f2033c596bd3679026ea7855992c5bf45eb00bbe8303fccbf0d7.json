{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport EventItem from '../components/EventItem';\nimport { json, useRouteLoaderData, redirect, defer } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EditDetailPage, \"YrSSyrTyKSWL5L21rA1p/NgF/LE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EditDetailPage;\nexport default EditDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // ...\n    // throw new Response(JSON.stringify({ message : 'Could not fetch events.'}), {\n    //   status : 500\n    // });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EditDetailPage\");","map":{"version":3,"names":["EventItem","json","useRouteLoaderData","redirect","defer","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EditDetailPage","_s","event","events","children","Await","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","loadEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loader","request","params","action","method","$RefreshReg$"],"sources":["/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import EventItem from '../components/EventItem';\nimport { json , useRouteLoaderData, redirect, defer } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\n\nfunction EditDetailPage() {\n    const {event , events} = useRouteLoaderData('event-detail');\n    return (\n        <>\n        <Await resolve={event}>\n        { loadedEvent => <EventItem event={ loadedEvent }/>}\n        </Await>\n        <Await resolve={events}>\n            { loadedEvents => <EventsList events={ loadEvents }/>}\n        </Await>\n        </>\n    )\n}\n\nexport default EditDetailPage;\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if(!response.ok) {\n        throw json({message : 'Could not fetch details for selected event.'}, {\n            status: 500\n        })\n    } else {\n        const resData = await response.json();\n        return resData.event;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n  \n    if (!response.ok) {\n      // ...\n      // throw new Response(JSON.stringify({ message : 'Could not fetch events.'}), {\n      //   status : 500\n      // });\n      throw json({message : 'Could not fetch events.'} , {status : 500});\n    } else {\n      const resData = await response.json();\n      return resData.events;\n  }\n  }\n\nexport async function loader({request, params}) {\n    const id = params.id;\n\n    return defer({\n        event : loadEvent(id),\n        events : loadEvents()\n    });\n}\n\nexport async function action({params , request}) {\n\n    const id = params.id;\n    const response = await fetch('http://localhost:8080/events/' + id, {\n        method : request.method,\n    });\n    if(!response.ok) {\n        throw json(\n        {message : 'Could not delete event.'}, \n        {\n            status: 500\n        }\n        );\n    }\n    return redirect(\"/events\");\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
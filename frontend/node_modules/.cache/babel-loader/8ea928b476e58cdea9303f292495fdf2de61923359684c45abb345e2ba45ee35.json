{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\n// You can useLoaderData() hook in the element that's assigned to a route AND \n// in all components that might be used inside that element. \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // ...\n    // throw new Response(JSON.stringify({ message : 'Could not fetch events.'}), {\n    //   status : 500\n    // });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData , json , defer , Await  } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\n// You can useLoaderData() hook in the element that's assigned to a route AND \n// in all components that might be used inside that element. \n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n  return <>\n  <Suspense>\n  <Await resolve={events}>\n    {(loadedEvents) => <EventsList events={loadedEvents}/>}\n  </Await>\n  </Suspense>\n  </>\n}\n\nexport default EventsPage;\n\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // ...\n    // throw new Response(JSON.stringify({ message : 'Could not fetch events.'}), {\n    //   status : 500\n    // });\n    throw json({message : 'Could not fetch events.'} , {status : 500});\n  } else {\n    return response;\n}\n}\n\nexport async function loader() {\n  return defer({\n    events : loadEvents()\n  });\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAGC,IAAI,EAAGC,KAAK,EAAGC,KAAK,QAAS,kBAAkB;AACxE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGZ,aAAa,CAAC,CAAC;EAClC,oBAAOO,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACPN,OAAA,CAACF,QAAQ;MAAAQ,QAAA,eACTN,OAAA,CAACJ,KAAK;QAACW,OAAO,EAAEF,MAAO;QAAAC,QAAA,EACnBE,YAAY,iBAAKR,OAAA,CAACH,UAAU;UAACQ,MAAM,EAAEG;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACT,CAAC;AACL;AAACR,EAAA,CATQD,UAAU;EAAA,QACEV,aAAa;AAAA;AAAAoB,EAAA,GADzBV,UAAU;AAWnB,eAAeA,UAAU;AAGzB,eAAeW,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAG;IAAyB,CAAC,EAAG;MAACC,MAAM,EAAG;IAAG,CAAC,CAAC;EACpE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACnB;AACA;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAG;EAC7B,OAAOzB,KAAK,CAAC;IACXU,MAAM,EAAGS,UAAU,CAAC;EACtB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
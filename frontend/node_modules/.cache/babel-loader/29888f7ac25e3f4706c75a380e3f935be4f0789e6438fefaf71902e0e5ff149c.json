{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useNavigation, useActionData, Form } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n  return (\n    /*#__PURE__*/\n    // action=\"/any-other-path\" - Can add action parameter to the Form element and it will trigger when you submit the form. \n    // In case if you want to trigger the currently active route you don't need add action parameter.\n    _jsxDEV(Form, {\n      method: method,\n      className: classes.form,\n      children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          defaultValue: event ? event.title : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          type: \"url\",\n          name: \"image\",\n          required: true,\n          defaultValue: event ? event.image : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          defaultValue: event ? event.date : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"5\",\n          required: true,\n          defaultValue: event ? event.description : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelHandler,\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Submitting...' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  let url = 'http://localhost:8080/events';\n  if (method === 'patch') {\n    url = url + '/' + params.id;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","useNavigation","useActionData","Form","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","data","navigate","navigation","isSubmitting","state","cancelHandler","className","form","children","errors","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","request","params","formData","eventData","get","url","response","fetch","headers","body","JSON","stringify","status","ok","json","message","redirect","$RefreshReg$"],"sources":["/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate , useNavigation, useActionData, Form } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n\n  const isSubmitting = navigation.state === 'submitting';\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    // action=\"/any-other-path\" - Can add action parameter to the Form element and it will trigger when you submit the form. \n    // In case if you want to trigger the currently active route you don't need add action parameter.\n    <Form method={method} className={classes.form}>\n      { data && data.errors && (\n      <ul>\n        {Object.values(data.errors).map((err) => (\n          <li key={err}>{err}</li>\n        ))}\n        </ul>\n        )}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required defaultValue={event ? event.title : ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required defaultValue={event ? event.image : ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required defaultValue={event ? event.date : ''} />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required defaultValue={event ? event.description : ''}/>\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>\n         {isSubmitting ? 'Submitting...' : 'Save'} \n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport async function action({request , params}) {\n  const method = request.method;\n  const data = await request.formData();\n\n  const eventData = {\n      title : data.get('title'),\n      image : data.get('image'),\n      date : data.get('date'),\n      description : data.get('description')\n  } \n\n  let url = 'http://localhost:8080/events';\n\n  if(method === 'patch') {\n    url = url + '/' + params.id;\n   }\n\n const response = await fetch(url, {\n      method : method,\n      headers : {\n          'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(eventData)\n  });\n\n  if(response.status === 422) {\n      return response;\n  }\n\n  if(!response.ok) {\n      throw json({ message : 'Could not save event.'}, { status : 500});\n  }\n\n  return redirect('/events');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
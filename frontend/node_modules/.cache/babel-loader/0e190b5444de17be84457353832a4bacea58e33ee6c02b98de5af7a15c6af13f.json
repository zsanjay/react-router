{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage, { loader as eventsLoader } from './pages/Events';\nimport NewEventsPage from './pages/NewEventPage';\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from './pages/EventDetailPage';\nimport EditEventPage from './pages/EditEventPage';\nimport RootLayout from './pages/RootLayout';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\nimport { action as newAndEditEventAction } from './components/EventForm';\nimport NewsletterPage, { action as newsletterAction } from './pages/Newsletter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':id',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 26\n        }, this),\n        action: newAndEditEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this),\n      action: newAndEditEventAction\n    }]\n  }, {\n    path: 'newsletter',\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","loader","eventsLoader","NewEventsPage","EventDetailPage","eventDetailLoader","action","deleteEventAction","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","newAndEditEventAction","NewsletterPage","newsletterAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/sanjay/Documents/Sanjay/React/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage, { loader as eventsLoader } from './pages/Events';\nimport NewEventsPage from './pages/NewEventPage';\nimport EventDetailPage , { loader as eventDetailLoader, action as deleteEventAction } from './pages/EventDetailPage';\nimport EditEventPage from './pages/EditEventPage';\nimport RootLayout from './pages/RootLayout';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\nimport { action as newAndEditEventAction } from './components/EventForm';\nimport NewsletterPage, { action as newsletterAction } from './pages/Newsletter';\n\nconst router = createBrowserRouter([\n  {\n    path : \"/\",\n    element: <RootLayout/>,\n    errorElement: <ErrorPage/>,\n    children : [\n      {index : true, element : <HomePage />},\n      {\n        path: \"events\",\n        element : <EventsRootLayout/>,\n        children : [\n          { index : true,\n          element : <EventsPage />,\n           loader: eventsLoader, \n          },\n          {\n            path : ':id',\n            id : 'event-detail',\n            loader : eventDetailLoader,\n            children: [\n              { \n                index : true,\n                element : <EventDetailPage />,\n                action : deleteEventAction\n              },\n              { path: \"edit\",\n               element : <EditEventPage />,\n              action : newAndEditEventAction\n            },\n            ] \n          },\n          { path: \"new\" , \n          element : <NewEventsPage />, \n          action : newAndEditEventAction\n        },\n        ] \n      },\n      {\n        path: 'newsletter',\n        element: <NewsletterPage />,\n        action: newsletterAction,\n      },\n    ]\n}\n]);\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,eAAe,IAAKH,MAAM,IAAII,iBAAiB,EAAEC,MAAM,IAAIC,iBAAiB,QAAQ,yBAAyB;AACpH,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AACrC,SAASL,MAAM,IAAIM,qBAAqB,QAAQ,wBAAwB;AACxE,OAAOC,cAAc,IAAIP,MAAM,IAAIQ,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,MAAM,GAAGpB,mBAAmB,CAAC,CACjC;EACEqB,IAAI,EAAG,GAAG;EACVC,OAAO,eAAEH,OAAA,CAACP,UAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACtBC,YAAY,eAAER,OAAA,CAACL,SAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAC1BE,QAAQ,EAAG,CACT;IAACC,KAAK,EAAG,IAAI;IAAEP,OAAO,eAAGH,OAAA,CAACjB,QAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,CAAC,EACtC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAGH,OAAA,CAACN,gBAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAC7BE,QAAQ,EAAG,CACT;MAAEC,KAAK,EAAG,IAAI;MACdP,OAAO,eAAGH,OAAA,CAAChB,UAAU;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBtB,MAAM,EAAEC;IACT,CAAC,EACD;MACEgB,IAAI,EAAG,KAAK;MACZS,EAAE,EAAG,cAAc;MACnB1B,MAAM,EAAGI,iBAAiB;MAC1BoB,QAAQ,EAAE,CACR;QACEC,KAAK,EAAG,IAAI;QACZP,OAAO,eAAGH,OAAA,CAACZ,eAAe;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC7BjB,MAAM,EAAGC;MACX,CAAC,EACD;QAAEW,IAAI,EAAE,MAAM;QACbC,OAAO,eAAGH,OAAA,CAACR,aAAa;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC5BjB,MAAM,EAAGM;MACX,CAAC;IAEH,CAAC,EACD;MAAEM,IAAI,EAAE,KAAK;MACbC,OAAO,eAAGH,OAAA,CAACb,aAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC3BjB,MAAM,EAAGM;IACX,CAAC;EAEH,CAAC,EACD;IACEM,IAAI,EAAE,YAAY;IAClBC,OAAO,eAAEH,OAAA,CAACH,cAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BjB,MAAM,EAAEQ;EACV,CAAC;AAEP,CAAC,CACA,CAAC;AAEF,SAASc,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAAClB,cAAc;IAACmB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}